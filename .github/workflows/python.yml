name: Python application

on:
  push:
    branches: [ main ]
  pull_request:

    branches: [ main ]

jobs:
  flake_check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
#        if [ -f ugc/conf/requirements.txt ]; then pip install -r ugc/conf/requirements.txt; fi
#        if [ -f ugc/conf/requirements_tests.txt ]; then pip install -r ugc/conf/requirements_tests.txt; fi
#        if [ -f etl/conf/requirements.txt ]; then pip install -r etl/conf/requirements.txt; fi

    - name: Lint with flake8
      run: |
        flake8 .


  mypy_etl_check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mypy
        pip install -r etl/conf/requirements.txt
    - name: mypy
      run: |
        mypy etl --config-file pyproject.toml

  mypy_ugc_check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mypy
        pip install -r ugc/conf/requirements.txt
    - name: mypy
      run: |
        mypy ugc --config-file pyproject.toml

  mypy_db_tests_check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mypy
        pip install -r db_tests/requirements.txt
    - name: mypy
      run: |
        mypy db_tests --config-file pyproject.toml

#    - name: Test with pytest
#      run: |
#        pytest tests/unit

  send_message:
    runs-on: ubuntu-latest
    needs: [flake_check, mypy_etl_check, mypy_db_tests_check, mypy_ugc_check]
    steps:
      - name: send message
        uses: appleboy/telegram-action@v0.1.1
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Success checks. ${{ github.workflow }}.
            Repository: ${{ github.repository }}
            From: ${{ github.actor }}
            
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}